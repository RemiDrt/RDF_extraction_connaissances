from Extractors import *

#creation/parsing du graphe
graphe = Graph()
auteur1 = URIRef("http://www.semanticweb.org/acemap#001")
auteur2 = URIRef("http://www.semanticweb.org/acemap#002")
auteur3 = URIRef("http://www.semanticweb.org/acemap#003")
paper1 = URIRef("http://www.semanticweb.org/acemap#010")
paper2 = URIRef("http://www.semanticweb.org/acemap#020")
paper3 = URIRef("http://www.semanticweb.org/acemap#030")
field1 = URIRef("http://www.semanticweb.org/acemap#100")
field2 = URIRef("http://www.semanticweb.org/acemap#200")
graphe.add((auteur1, RDF.type, ace.Author))
graphe.add((auteur2, RDF.type, ace.Author))
graphe.add((auteur3, RDF.type, ace.Author))
graphe.add((paper1, RDF.type, ace.Paper))
graphe.add((paper2, RDF.type, ace.Paper))
graphe.add((paper3, RDF.type, ace.Paper))
graphe.add((field1, RDF.type, ace.Field))
graphe.add((field2, RDF.type, ace.Field))
graphe.add((auteur1, ace.author_name, Literal("Remi DURET", datatype=XSD.string)))
graphe.add((auteur2, ace.author_name, Literal("Waris RADJI", datatype=XSD.string)))
graphe.add((auteur3, ace.author_name, Literal("Colin ESPINAS", datatype=XSD.string)))
graphe.add((field1, ace.field_name, Literal("Genie Logiciel", datatype=XSD.string)))
graphe.add((field2, ace.field_name, Literal("Data Science", datatype=XSD.string)))
graphe.add((paper1, ace.paper_title, Literal("Optisimation des applications de bureau", datatype=XSD.string)))
graphe.add((paper2, ace.paper_title, Literal("Les algorithmes de data mining", datatype=XSD.string)))
graphe.add((paper3, ace.paper_title, Literal("Faire un framework complet", datatype=XSD.string)))
graphe.add((auteur1, ace.author_is_in_field, field1))
graphe.add((auteur2, ace.author_is_in_field, field1))
graphe.add((auteur2, ace.author_is_in_field, field2))
graphe.add((auteur3, ace.author_is_in_field, field1))
graphe.add((auteur3, ace.author_is_in_field, field2))
graphe.add((paper1, ace.paper_is_in_field, field1))
graphe.add((paper2, ace.paper_is_in_field, field1))
graphe.add((paper2, ace.paper_is_in_field, field2))
graphe.add((paper3, ace.paper_is_in_field, field1))
graphe.add((paper3, ace.paper_is_in_field, field2))
graphe.add((paper1, ace.paper_is_written_by, auteur1))
graphe.add((paper2, ace.paper_is_written_by, auteur2))
graphe.add((paper2, ace.paper_is_written_by, auteur3))
graphe.add((paper3, ace.paper_is_written_by, auteur3))
graphe.add((paper2, ace.paper_cit_paper, paper1))
graphe.add((paper3, ace.paper_cit_paper, paper1))
graphe.add((paper3, ace.paper_cit_paper, paper2))
graphe.add((paper1, ace.paper_publish_date, Literal("2015-03-26", datatype=XSD.date)))
graphe.add((paper2, ace.paper_publish_date, Literal("2018-05-12", datatype=XSD.date)))
graphe.add((paper3, ace.paper_publish_date, Literal("2020-02-07", datatype=XSD.date)))


#cr√©ation des structures
authors = ExtraireAuteurs(graphe)
papers = ExtrairePublications(graphe)
fields = ExtraireConceptes(graphe)
IDToAuthor = IDToAuthor(graphe, authors)
IDToField = IDToField(graphe, fields)
IDToPaper = IDToPaper(graphe, papers)
paperToYear = PaperToYear(graphe, papers)
paperToField = PaperToField(graphe, papers)
authorToField = AuthorToField(graphe, authors)
authorToPaper = AuthorToPaper(graphe, authors)
authorToYear = AuthorToYear(graphe, authors, authorToPaper)
paperToAuthor = PaperToAuthor(graphe, papers)
paperCitPaper = PaperCitPaper(graphe, papers)
paperCitAuthor = PaperCitAuthor(papers, paperToAuthor, paperCitPaper)
authorCitPaper = AuthorCitPaper(authors, papers, paperToAuthor, paperCitPaper)
fieldToPaper = FieldToPaper(graphe, fields)
fieldToAuthor = FieldToAuthor(graphe, fields)
fieldToYear = FieldToYear(fields, fieldToPaper, paperToYear)
paperCitField = PaperCitField(papers, paperToField, paperCitPaper)
fieldCitPaper = FieldCitPaper(fields, fieldToPaper, paperCitPaper)
coauteurs = Coauteurs(authors, paperToAuthor, authorToPaper)
citation = Citation(authors, paperToAuthor, authorCitPaper)
copublication = Copublication(papers, paperToAuthor, authorToPaper)
coOccurrence = CoOccurrence(fields, paperToField, fieldToPaper)
citationE = CitationE(fields, paperToField, fieldCitPaper)
publicationAuteurs = PublicationsAuteurs(authorToPaper, paperToAuthor)
auteursPublicationCitees = AuteurPublicationCitees(papers, authorCitPaper)
publicationAuteurCites = PublicationAuteurCites(authors, paperCitAuthor)

#export de chaque structures en JSON
ExportToJSON(authors, "JSON_struct/Authors.json")
ExportToJSON(papers, "JSON_struct/Papers.json")
ExportToJSON(fields, "JSON_struct/Fields.json")
ExportToJSON(IDToAuthor, "JSON_struct/IDToAuthor.json")
ExportToJSON(IDToField, "JSON_struct/IDToField.json")
ExportToJSON(IDToPaper, "JSON_struct/IDToPaper.json")
ExportToJSON(paperToYear, "JSON_struct/PaperToYear.json")
ExportToJSON(paperToField, "JSON_struct/PaperToField.json")
ExportToJSON(authorToField, "JSON_struct/AuthorToField.json")
ExportToJSON(authorToPaper, "JSON_struct/AuthorToPaper.json")
ExportToJSON(authorToYear, "JSON_struct/AuthorToYear.json")
ExportToJSON(paperToAuthor, "JSON_struct/PaperToAuthor.json")
ExportToJSON(paperCitPaper, "JSON_struct/PaperCitPaper.json")
ExportToJSON(paperCitAuthor, "JSON_struct/PaperCitAuthor.json")
ExportToJSON(authorCitPaper, "JSON_struct/AuthorCitPaper.json")
ExportToJSON(fieldToPaper, "JSON_struct/FieldToPaper.json")

ExportToJSON(fieldToAuthor, "JSON_struct/FieldToAuthors.json")
ExportToJSON(fieldToYear, "JSON_struct/FieldToYear.json")
ExportToJSON(paperCitField, "JSON_struct/PaperCitField.json")
ExportToJSON(fieldCitPaper, "JSON_struct/FieldCitPaper.json")
ExportToJSON(coauteurs, "JSON_struct/Coauteurs.json")
ExportToJSON(citation, "JSON_struct/Citation.json")
ExportToJSON(copublication, "JSON_struct/Copublication.json")
ExportToJSON(coOccurrence, "JSON_struct/CoOccurrence.json")
ExportToJSON(citationE, "JSON_struct/CitationE.json")
ExportToJSON(publicationAuteurs, "JSON_struct/PublicationAuteurs.json")
ExportToJSON(auteursPublicationCitees, "JSON_struct/AuteurPublicationCitees.json")
ExportToJSON(publicationAuteurCites, "JSON_struct/PublicationAuteurCites.json")

